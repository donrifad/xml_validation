//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.05.09 at 01:53:38 PM IST 
//


package generated;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;
import java.math.BigInteger;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the generated package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _PRICE_QNAME = new QName("", "PRICE");
    private final static QName _AVAILABILITY_QNAME = new QName("", "AVAILABILITY");
    private final static QName _ZONE_QNAME = new QName("", "ZONE");
    private final static QName _LIGHT_QNAME = new QName("", "LIGHT");
    private final static QName _COMMON_QNAME = new QName("", "COMMON");
    private final static QName _BOTANICAL_QNAME = new QName("", "BOTANICAL");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link PLANT }
     */
    public PLANT createPLANT() {
        return new PLANT();
    }

    /**
     * Create an instance of {@link CATALOG }
     */
    public CATALOG createCATALOG() {
        return new CATALOG();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     */
    @XmlElementDecl(namespace = "", name = "PRICE")
    public JAXBElement<String> createPRICE(String value) {
        return new JAXBElement<String>(_PRICE_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     */
    @XmlElementDecl(namespace = "", name = "AVAILABILITY")
    public JAXBElement<BigInteger> createAVAILABILITY(BigInteger value) {
        return new JAXBElement<BigInteger>(_AVAILABILITY_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     */
    @XmlElementDecl(namespace = "", name = "ZONE")
    public JAXBElement<String> createZONE(String value) {
        return new JAXBElement<String>(_ZONE_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     */
    @XmlElementDecl(namespace = "", name = "LIGHT")
    public JAXBElement<String> createLIGHT(String value) {
        return new JAXBElement<String>(_LIGHT_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     */
    @XmlElementDecl(namespace = "", name = "COMMON")
    public JAXBElement<String> createCOMMON(String value) {
        return new JAXBElement<String>(_COMMON_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     */
    @XmlElementDecl(namespace = "", name = "BOTANICAL")
    public JAXBElement<String> createBOTANICAL(String value) {
        return new JAXBElement<String>(_BOTANICAL_QNAME, String.class, null, value);
    }

}
